package rules;

import java.util.ArrayList;
import com.athub.rules.entity.Person;
import com.athub.model.PersonRuleModel;

global com.athub.service.PersonService personService;   //调用spring管理的service方法

rule "person_1"
    // lock-on-active true  防止死循环，定以后指定rule只执行一次
    // no-loop true 防止死循环
    // salience 100 设置执行顺序，值越大执行优先级越高
    enabled false
    // dialect "java"
    when
        $person:Person(age < 30);
    then
        $person.setScore(80);
        System.out.println("触发规则，30岁以下得80分");
end

rule "person_2"
    enabled false
    when
        $person:Person(30 < age && age< 40)
    then
        $person.setScore(70);
        update($person);        //update操作后，规则会将其作为初始参数来进行判断（而不是以进规则时的默认值），所以rule person_3会被执行
        System.out.println("触发规则，30岁-40岁得70分");
//        drools.halt();          //立即终止规则执行
end

rule "person_3"
    enabled false
    when
        $person:Person(score >= 70)
    then
        System.out.println("score:" + $person.getScore());
end

rule "person_4"
    when
        $personList: ArrayList()
        $rule:PersonRuleModel()
        $p:Person(age==$rule.getAge() || name==$rule.getName()) from $personList
    then
        $p.setScore($rule.getScore());
        personService.sayHi($p);
end